{"version":3,"sources":["components/Box.js","util/responsiveHelper.js","styles/animations.js","components/Text.js","components/BlackMirror.js","pages/LandingPage.js","components/Header.js","pages/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["Box","styled","div","space","layout","flexbox","color","cursor","css","generateSizes","size","factor","Array","from","map","_v","i","Math","max","fadeIn","keyframes","shake","crack1","crack2","VARIANTS_BASE","Text","fadeInAnimation","glowColor","typography","variant","variants","medium","fontSize","large","xLarge","xxLarge","propTypes","oneOf","string","bool","defaultProps","Header","h1","BlackMirror","children","textAlign","data-text","ContinueLink","LandingPage","onClick","useState","showLink","setShowLink","useEffect","id","window","setTimeout","clearTimeout","width","height","display","alignItems","justifyContent","rest","minWidth","ProfileBox","HomePage","minHeight","paddingLeft","paddingBottom","App","showApp","setShowApp","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3a2ea789.chunk.js","sourcesContent":["import styled, { css } from 'styled-components'\nimport { space, layout, flexbox, color } from 'styled-system'\n\nconst Box = styled.div`\n  ${space}\n  ${layout}\n  ${flexbox}\n  ${color}\n  ${({ cursor }) =>\n    css`\n      cursor: ${cursor};\n    `}\n`\n\nexport default Box\n","const RESPONSIVE_FACTOR = 1.3\n\nexport const generateSizes = (size, factor = RESPONSIVE_FACTOR) =>\n  Array.from(Array(4)).map((_v, i) => size * Math.max(1, i * factor - i + 1))\n","import { keyframes } from 'styled-components'\n\nexport const fadeIn = keyframes`\n  from {\n    transform: scale(.95);\n    opacity: 0;\n  }\n\n  to {\n    transform: scale(1);\n    opacity: 1;\n  }\n`\n\nexport const shake = keyframes`\n  5%, 15%, 25%, 35%, 55%, 65%, 75%, 95% {\n    filter: blur(0.018em);\n    transform: translateY(0.018em) rotate(0deg);\n  }\n\n  10%, 30%, 40%, 50%, 70%, 80%, 90% {\n    filter: blur(0.01em);\n    transform: translateY(-0.018em) rotate(0deg);\n  }\n\n  20%, 60% {\n    filter: blur(0.03em);\n    transform: translate(-0.018em, 0.018em) rotate(0deg);\n  }\n\n  45%, 85% {\n    filter: blur(0.03em);\n    transform: translate(0.018em, -0.018em) rotate(0deg);\n  }\n\n  100% {\n    filter: blur(0.007em);\n    transform: translate(0) rotate(-0.5deg);\n  }\n`\n\nexport const crack1 = keyframes`\n  0%, 95% {\n    transform: translate(-50%, -50%);\n  }\n\n  100% {\n    transform: translate(-51%, -48%);\n  }\n`\n\nexport const crack2 = keyframes`\n  0%, 95% {\n    transform: translate(-50%, -50%);\n  }\n\n  100% {\n    transform: translate(-49%, -53%);\n  }\n`\n","import styled, { css } from 'styled-components'\nimport {\n  space,\n  layout,\n  color,\n  typography,\n  flexbox,\n  variant,\n} from 'styled-system'\nimport { oneOf, string, bool } from 'prop-types'\n\nimport { generateSizes } from '../util/responsiveHelper'\nimport { fadeIn as fadeInAnimation } from '../styles/animations'\n\nconst VARIANTS_BASE = {\n  medium: 18,\n  large: 28,\n  xLarge: 28,\n  xxLarge: 38,\n}\n\nconst Text = styled.div`\n  ${({ fadeIn }) =>\n    fadeIn &&\n    css`\n      animation: ${fadeInAnimation} 250ms ease-in forwards;\n    `}\n  ${({ glowColor }) =>\n    glowColor &&\n    css`\n      text-shadow: 0 0 0.15em ${glowColor};\n    `}\n  ${space}\n  ${layout}\n  ${color}\n  ${typography}\n  ${flexbox}\n  ${variant({\n    variants: {\n      medium: {\n        fontSize: generateSizes(VARIANTS_BASE['medium']),\n      },\n      large: {\n        fontSize: generateSizes(VARIANTS_BASE['large']),\n      },\n      xLarge: {\n        fontSize: generateSizes(VARIANTS_BASE['xLarge'], 1.6),\n      },\n      xxLarge: {\n        fontSize: generateSizes(VARIANTS_BASE['xxLarge'], 1.8),\n      },\n    },\n  })}`\n\nText.propTypes = {\n  variant: oneOf(['medium', 'large', 'xLarge', 'xxLarge']),\n  glowColor: string,\n  fadeIn: bool,\n}\n\nText.defaultProps = {\n  variant: 'medium',\n}\n\nexport default Text\n","import React from 'react'\nimport { string } from 'prop-types'\nimport styled from 'styled-components'\n\nimport Text from './Text'\nimport { crack1, crack2, shake } from '../styles/animations'\n\nconst Header = styled.h1`\n  font-weight: 700;\n  color: #fff;\n  letter-spacing: 6px;\n  text-transform: uppercase;\n  text-shadow: 0 0 0.15em var(--landing-page-shadow-color);\n  white-space: nowrap;\n  filter: blur(0.007em);\n  animation: ${shake} 2.5s linear forwards;\n\n  span {\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform: translate(-50%, -50%);\n    -webkit-clip-path: polygon(10% 0%, 44% 0%, 70% 100%, 55% 100%);\n    clip-path: polygon(10% 0%, 44% 0%, 70% 100%, 55% 100%);\n  }\n\n  ::before,\n  ::after {\n    content: attr(data-text);\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n\n  ::before {\n    animation: ${crack1} 2.5s linear forwards;\n    clip-path: polygon(0% 0%, 10% 0%, 55% 100%, 0% 100%);\n  }\n\n  ::after {\n    animation: ${crack2} 2.5s linear forwards;\n    clip-path: polygon(44% 0%, 100% 0%, 100% 100%, 70% 100%);\n  }\n`\n\nconst BlackMirror = ({ children }) => (\n  <Text variant=\"xxLarge\" textAlign=\"center\">\n    <Header data-text={children}>\n      <span>{children}</span>\n    </Header>\n  </Text>\n)\n\nBlackMirror.propTypes = {\n  children: string,\n}\n\nexport default BlackMirror\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { func } from 'prop-types'\n\nimport Box from '../components/Box'\nimport BlackMirror from '../components/BlackMirror'\nimport Text from '../components/Text'\nimport { fadeIn } from '../styles/animations'\n\nconst ContinueLink = styled(Text)`\n  padding-right: 40px;\n  color: var(--link-color);\n  opacity: 0;\n  animation: ${fadeIn} 250ms ease-in forwards;\n`\n\nconst LandingPage = ({ onClick }) => {\n  const [showLink, setShowLink] = useState(false)\n\n  useEffect(() => {\n    const id = window.setTimeout(() => setShowLink(true), 3500)\n    return () => window.clearTimeout(id)\n  }, [])\n\n  return (\n    <>\n      <Box\n        width=\"100%\"\n        height=\"90%\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        onClick={onClick}\n        cursor=\"pointer\"\n      >\n        <BlackMirror>Per Jansson</BlackMirror>\n      </Box>\n      <Box\n        width=\"100%\"\n        height=\"10%\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"flex-end\"\n      >\n        {showLink && <ContinueLink>Click anywhere to enter...</ContinueLink>}\n      </Box>\n    </>\n  )\n}\n\nLandingPage.propTypes = {\n  onClick: func,\n}\n\nexport default LandingPage\n","import React from 'react'\nimport { any } from 'prop-types'\n\nimport Box from './Box'\nimport Text from './Text'\n\nconst Header = ({ children, ...rest }) => {\n  return (\n    <header>\n      <Box\n        width={1}\n        minWidth={350}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        {...rest}\n      >\n        <Text\n          variant=\"xLarge\"\n          color=\"var(--primary-header-color)\"\n          glowColor=\"var(--primary-header-glow-color)\"\n          fadeIn\n        >\n          {children}\n        </Text>\n      </Box>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  children: any.isRequired,\n}\n\nexport default Header\n","import styled from 'styled-components'\nimport React from 'react'\nimport Box from '../components/Box'\n\nimport Header from '../components/Header'\n\nconst ProfileBox = styled(Box)`\n  background-image: linear-gradient(\n      to bottom,\n      transparent,\n      var(--primary-bg-half-transparent-color),\n      var(--primary-bg-color)\n    ),\n    url(assets/profile_small_portrait.jpeg);\n\n  @media (min-width: 52em) and (orientation: portrait) {\n    background-image: linear-gradient(\n        to bottom,\n        transparent,\n        var(--primary-bg-half-transparent-color),\n        var(--primary-bg-color)\n      ),\n      url(assets/profile_small_portrait.jpeg);\n  }\n\n  @media (min-width: 52em) and (orientation: landscape) {\n    background-image: linear-gradient(\n        to bottom,\n        transparent,\n        var(--primary-bg-half-transparent-color),\n        var(--primary-bg-color)\n      ),\n      url(assets/profile_medium.jpeg);\n  }\n\n  @media (min-width: 64em) and (orientation: landscape) {\n    background-image: linear-gradient(\n        to bottom,\n        transparent,\n        var(--primary-bg-half-transparent-color),\n        var(--primary-bg-color)\n      ),\n      url(assets/profile_large.jpeg);\n  }\n\n  background-repeat: no-repeat;\n  background-size: cover;\n`\n\nconst HomePage = () => {\n  // const onThemeChange = () => {\n  //   const elem = document.documentElement\n  //   elem.setAttribute(\n  //     'data-theme',\n  //     elem.getAttribute('data-theme') === 'dark' ? 'light' : 'dark'\n  //   )\n  // }\n\n  return (\n    <>\n      <ProfileBox\n        minHeight=\"100%\"\n        display=\"flex\"\n        alignItems=\"flex-end\"\n        justifyContent=\"flex-start\"\n      >\n        <Header\n          paddingLeft={['5px', '20px,', '30px']}\n          paddingBottom={['30px', '40px,', '50px']}\n        >\n          per jansson\n          <br />\n          fullstack web developer\n        </Header>\n      </ProfileBox>\n    </>\n  )\n}\n\nexport default HomePage\n","import React, { useState } from 'react'\n\nimport LandingPage from './pages/LandingPage'\nimport HomePage from './pages/HomePage'\n\nfunction App() {\n  const [showApp, setShowApp] = useState(false)\n\n  return !showApp ? (\n    <LandingPage onClick={() => setShowApp(true)} />\n  ) : (\n    <HomePage />\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}